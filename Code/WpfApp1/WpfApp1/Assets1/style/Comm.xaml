<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpfx="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:helper="clr-namespace:neworbit.CustomClass">

    <ImageBrush   x:Key="ToggleButtonImage" ImageSource="../../Assets/images/projectLeftExpand.png"/>
    <ImageBrush   x:Key="centerButtonCheckImage" ImageSource="../../Assets/images/centerButton_Checked.png" />
    <ImageBrush   x:Key="centerButtonUnCheckImage" ImageSource="../../Assets/images/centerButton_UnChecked.png" />
    <ImageBrush   x:Key="centerFirstButtonCheckImage" ImageSource="../../Assets/images/centerButton_FirstChecked.png" />
    <ImageBrush   x:Key="centerFirstButtonUnCheckImage" ImageSource="../../Assets/images/centerFirstButton_UnChecked.png" />
    <ImageBrush   x:Key="ComboboxImage" ImageSource="../../Assets/images/comboboxBack.png" />
    <ImageBrush   x:Key="startBackImg" ImageSource="../../Assets/images/startBackImg2.png" />
    <ImageBrush   x:Key="topButtonImage" ImageSource="../../Assets/images/button.png"/>
    <ImageBrush   x:Key="TrainHeadRbtImg" ImageSource="../../Assets/images/车头.png"/>
    <ImageBrush   x:Key="TrainHeadRbtImgS" ImageSource="../../Assets/images/车头选中.png"/>
    <ImageBrush   x:Key="TrainBodyRbtImg" ImageSource="../../Assets/images/车厢.png"/>
    <ImageBrush   x:Key="TrainBodyRbtImgS" ImageSource="../../Assets/images/车厢选中.png"/>
    <ImageBrush   x:Key="TrainTailRbtImg" ImageSource="../../Assets/images/车尾.png"/>
    <ImageBrush   x:Key="TrainTailRbtImgS" ImageSource="../../Assets/images/车尾选中.png"/>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="80" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border2"   Background="{TemplateBinding Background}"  
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     Margin="{TemplateBinding Padding}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     Margin="{TemplateBinding Padding}" 
                     RecognizesAccessKey="True" 
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#FFd2e7f4" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=ToggleButtonImage}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="#191E36"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- 小标题样式 -->
    <Style x:Key="RadioMiniButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="5 5 1 5"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="#4B8EC4"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#101F3F"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="border2"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}"/>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=topButtonImage}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="#101F3F"/>
                            <Setter Property="Foreground" Value="#4B8EC4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--顶部单选按钮样式-->
    
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <!--Setter Property="Width" Value="120"/-->
        <Setter Property="Height" Value="78"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="#82B9FF"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="10, 0, 10, 10"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="border2"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}"/>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=topButtonImage}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#82B9FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}"
                                          DockPanel.Dock="Top"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                               FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1" MinWidth="0" MinHeight="0" 
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ToggleButtonStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentPresenter x:Name="ExpandSite" 
                                              DockPanel.Dock="Left" 
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}"
                                              Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer 滚动条 -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--滚动条颜色-->
                        <Border Background="#646465" CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条上下按钮-->
    <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity"  Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="#90000000" Width="0" Height="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,1,1,6"/>
        <Setter Property="Width"  Value="10"/>
        <Setter Property="MinWidth"  Value="5"/>
        <Setter Property="Opacity"   Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <RepeatButton  Grid.Row="0" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                        <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background"  Value="Transparent"/>
                <Setter Property="Margin" Value="1,0,6,1"/>
                <Setter Property="Height"   Value="5"/>
                <Setter Property="MinHeight"  Value="5"/>
                <Setter Property="Width"    Value="Auto"/>
                <Setter Property="Opacity" Value="0.2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="for_scrollviewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       HorizontalAlignment="Right"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Style="{StaticResource for_scrollbar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Style="{StaticResource for_scrollbar}"
                                       VerticalAlignment="Bottom"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认ScrollBar-->
    <Style TargetType="ScrollBar" BasedOn="{StaticResource for_scrollbar}"/>

    <!--默认ScrollView-->
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource for_scrollviewer}"/>

    <!--中间第一个按钮样式-->
    <Style x:Key="CenterFirstRadioButtonStyle"
               TargetType="{x:Type RadioButton}">
        <Setter Property="Width"
                    Value="184" />
        <Setter Property="Height"
                    Value="78" />
        <Setter Property="FontSize"
                    Value="26" />
        <Setter Property="Foreground"
                    Value="#82B9FF" />
        <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
        <Setter Property="BorderBrush"
                    Value="Transparent" />
        <Setter Property="BorderThickness"
                    Value="0" />
        <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                        <Border x:Name="border2" />
                        <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Grid.Column="1"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                     Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0"
                                                                   SnapsToDevicePixels="True"
                                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                                   StrokeThickness="1"
                                                                   StrokeDashArray="1 2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding"
                                        Value="4,-10,0,0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                     Value="{x:Null}" />

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=centerFirstButtonCheckImage}">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=centerFirstButtonUnCheckImage}">
                            </Setter>
                            <Setter Property="Foreground" Value="#82B9FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--中间按钮样式-->
    <Style x:Key="CenterRadioButtonStyle"
               TargetType="{x:Type RadioButton}">
        <Setter Property="Width"
                    Value="184" />
        <Setter Property="Height"
                    Value="78" />
        <Setter Property="FontSize"
                    Value="26" />
        <Setter Property="Foreground"
                    Value="#0A1129" />
        <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
        <Setter Property="BorderBrush"
                    Value="Transparent" />
        <Setter Property="BorderThickness"
                    Value="0" />
        <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                        <Border x:Name="border2" />
                        <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Grid.Column="1"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                     Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0"
                                                                   SnapsToDevicePixels="True"
                                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                                   StrokeThickness="1"
                                                                   StrokeDashArray="1 2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding"
                                        Value="4,-10,0,0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                     Value="{x:Null}" />

                        <Trigger Property="IsChecked"
                                     Value="true">
                            <Setter Property="Foreground"
                                        Value="White" />
                            <Setter Property="Background"
                                        TargetName="border2"
                                        Value="{StaticResource ResourceKey=centerButtonCheckImage}">
                                <!--<Setter.Value>
                                            <ImageBrush ImageSource="./images/back.png" />
                                        </Setter.Value>-->
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                     Value="false">
                            <Setter Property="Background"
                                        TargetName="border2"
                                        Value="{StaticResource ResourceKey=centerButtonUnCheckImage}">
                            </Setter>
                            <Setter Property="Foreground"
                                        Value="#82B9FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton样式（折叠展开按钮） -->
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            CornerRadius="4"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="Transparent">
                        <Border x:Name="splitBorder"
                                CornerRadius="4"
                                Width="30"
                                SnapsToDevicePixels="true"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1"
                                                     StartPoint="0,0">
                                    <GradientStop Color="Transparent"
                                                  Offset="0" />
                                    <GradientStop Color="Transparent"
                                                  Offset="0.52" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="arrow"
                                  VerticalAlignment="Center"
                                  Margin="0,0,0,0"
                                  Stretch="Fill"
                                  Height="7"
                                  Width="12"
                                  HorizontalAlignment="Center"
                                  Fill="White"
                                  Data="M 50,50 L 0,0 100,0 z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="#001E3E" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    TargetName="arrow"
                                    Value="#FFADADAD" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="1"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="0"
                        Background="#0F1E3D"
                        Width="{Binding ActualWidth, ElementName=templateRoot}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                    <Grid x:Name="grid"
                              RenderOptions.ClearTypeHint="Enabled">
                        <Canvas x:Name="canvas"
                                    HorizontalAlignment="Center"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                            <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                        </Canvas>
                        <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Continue"
                                        Background="Transparent" />
                    </Grid>
                </ScrollViewer>
                </Border>
            </Popup>
            <Border Grid.ColumnSpan="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4">
                <Grid>
                    <ToggleButton x:Name="toggleButton"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="0"
                                  Background="{TemplateBinding Background}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">  
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>  
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>  
                    </Trigger>-->
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--下拉列表样式-->
    <Style x:Key="ComboBoxItemStyle"
           TargetType="ComboBoxItem">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Back"
                            Background="Transparent"
                            BorderThickness="3,3,3,3"
                            BorderBrush="Transparent">
                        <ContentPresenter ContentSource="{Binding Source}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Back"
                                    Property="Background"
                                    Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Back"
                                    Property="Background"
                                    Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="Back"
                                    Property="Background"
                                    Value="LightBlue"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Background"
                Value="{StaticResource ResourceKey=ComboboxImage}" />

        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="Margin"
                Value="0,0,10,5"></Setter>
        <Setter Property="Padding"
                Value="50,0,0,0"></Setter>
        <Setter Property="IsEditable"
                Value="False"></Setter>
        <Setter Property="SelectedIndex" Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        
    </Style>

    <Style x:Key="ComboBoxStyle1"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Background"
                Value="{StaticResource ResourceKey=ComboboxImage}" />

        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="Margin"
                Value="0,0,10,5"></Setter>
        <Setter Property="Padding"
                Value="50,0,0,0"></Setter>
        <Setter Property="IsEditable"
                Value="False"></Setter>
        <Setter Property="SelectedIndex" Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />

    </Style>

    <!--NonSelectableListViewContainerStyle：无选中状态、支持交替色样式-->
    <Style x:Key="NonSelectableListViewContainerStyle"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground"
                Value="#9DA6B4" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Padding"
                Value="3,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"
                     Value="0">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DefaultGridViewScrollViewerStyle-->
    <Style x:Key="DefaultGridViewScrollViewerStyle"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Margin="0"
                                                            Visibility="Visible"
                                                            x:Name="PART_Header"
                                                            Height="auto"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0.0"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0.0"
                                   Orientation="Vertical"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Columns, ElementName=PART_Header}"
                                     Value="{x:Null}">
                            <Setter Property="Visibility"
                                    TargetName="PART_Header"
                                    Value="Collapsed"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DefaultListViewItem-->
    <Style x:Key="DefaultListViewItem"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground"
                Value="#9DA6B4" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Padding"
                Value="0,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            Margin="{TemplateBinding Margin}">
                        <Grid x:Name="PART_Root"
                              Margin="{TemplateBinding Padding}">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <ContentPresenter x:Name="contentPresenter"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection"
                                 Value="{x:Null}">
                            <Setter TargetName="contentPresenter"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DefaultListView-->
    <Style x:Key="DefaultListView"
           TargetType="{x:Type ListView}">
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Top"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="Foreground"
                Value="#333333"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource DefaultListViewItem}"></Setter>
        <Setter Property="FontSize"
                Value="19"></Setter>
        <!--False会关闭虚拟化-->
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
                Value="False" />
        <Setter Property="AlternationCount"
                Value="2" />
        <!-- Things taken from the original template. -->
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource DefaultListViewItem}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#2A58B2"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Style="{StaticResource DefaultGridViewScrollViewerStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="Thumb">
        <Setter Property="Width"
                Value="18" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            Margin="0 0 0 2">
                        <Rectangle Width="1"
                                   Fill="{TemplateBinding Background}"
                                   HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DefaultGridViewColumnHeader-->
    <Style x:Key="DefaultGridViewColumnHeader"
           TargetType="GridViewColumnHeader">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Height"
                Value="39" />
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="#2A58B2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Rectangle Fill="Transparent"
                                   IsHitTestVisible="True" />
                        <Border x:Name="HeaderBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="#2A58B2">
                            <ContentPresenter x:Name="HeaderContent"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="5,1,5,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="6,1,6,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextBlock.FontWeight="SemiBold"
                               Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Floating 的 Role 值标识当前是拖放操作的对象的列-->
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="39" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ListViewContentStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="TextAlignment"
                Value="Center">
        </Setter>
        <Setter Property="Padding" Value="30 5 30 5"/>
    </Style>

    <!-- 应该在此定义资源字典条目。-->
    <Style x:Key="DatePickerTextBoxStyle1"
           TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <TextBox BorderThickness="0"
                             Text="{Binding Path=SelectedDate, StringFormat='yyyy-MM-dd HH:mm:ss', RelativeSource={RelativeSource AncestorType=DatePicker}}"
                             Foreground="White"
                             VerticalContentAlignment="Center"
                             Padding="5,0,5,0"
                             Background="{x:Null}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DateTimePickerStyle" TargetType="{x:Type wpfx:DateTimePicker}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="ShowDropDownButton" Value="False"/>
        <Setter Property="Format" Value="Custom"/>
        <Setter Property="FormatString" Value="yyyy-MM-dd HH:mm:ss"/>
        <Setter Property="Width"
                Value="180"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="FontSize"
                Value="13"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="Padding"
                Value="2,0,0,0"></Setter>
        <Setter Property="Margin"
                Value="0,0,10,5"></Setter>
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Background"
                Value="{StaticResource ResourceKey=ComboboxImage}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0"
                                     StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9"
                                  Offset="0" />
                    <GradientStop Color="#FF8399A9"
                                  Offset="0.375" />
                    <GradientStop Color="#FF718597"
                                  Offset="0.375" />
                    <GradientStop Color="#FF617584"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />

        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfx:DateTimePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="Center"
                              Margin="0,0,0,0">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"
                                                 Color="#A5FFFFFF" />
                                <ControlTemplate x:Key="DropDownButtonTemplate"
                                                 TargetType="{x:Type Button}">
                                    <Grid Background="#FF0C274B"
                                          FlowDirection="LeftToRight"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="32"
                                          Height="30">
                                        <Path Fill="#26c9ff"
                                              HorizontalAlignment="Center"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Data="M 890.127 145.672 h -43.389 V 132.78 c 0 -38.644 -31.466 -70.234 -69.922 -70.234 h -1.032 c -38.458 0 -69.922 31.59 -69.922 70.234 v 12.892 h -386.7 V 132.78 c 0 -38.644 -31.465 -70.234 -69.922 -70.234 h -1.063 c -38.457 0 -69.923 31.59 -69.923 70.234 v 12.892 h -43.296 c -38.458 0 -69.923 31.622 -69.923 70.207 v 671.446 c 0 38.644 31.466 70.236 69.923 70.236 h 755.17 c 38.458 0 69.922 -31.592 69.922 -70.236 V 215.879 c 0 -38.585 -31.464 -70.207 -69.923 -70.207 Z M 733.83 132.78 c 0 -23.222 18.793 -42.139 41.954 -42.139 h 1.032 c 23.13 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.824 42.14 -41.954 42.14 h -1.032 c -23.161 0 -41.954 -18.916 -41.954 -42.14 V 132.779 Z m -527.607 0 c 0 -23.222 18.793 -42.139 41.955 -42.139 h 1.063 c 23.098 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.856 42.14 -41.954 42.14 h -1.063 c -23.162 0 -41.955 -18.916 -41.955 -42.14 V 132.779 Z m 683.904 768.626 H 134.958 c -7.585 0 -13.985 -6.525 -13.985 -14.08 V 393.649 h 783.138 v 493.676 c 0 7.555 -6.399 14.08 -13.984 14.08 Z" />
                                        <Path Fill="#26c9ff"
                                              Margin="7"
                                              HorizontalAlignment="Center"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Data="M 223.755 494.2 H 352.78 v 63.488 H 223.755 V 494.2 Z M 449.035 494.2 h 128 v 63.488 h -128 V 494.2 Z M 673.291 494.2 h 125.952 v 63.488 H 673.291 V 494.2 Z M 223.755 623.224 H 352.78 v 62.464 H 223.755 v -62.464 Z M 449.035 623.224 h 128 v 62.464 h -128 v -62.464 Z M 673.291 623.224 h 125.952 v 62.464 H 673.291 v -62.464 Z M 223.755 749.176 H 352.78 v 65.536 H 223.755 v -65.536 Z M 449.035 749.176 h 128 v 65.536 h -128 v -65.536 Z M 673.291 749.176 h 125.952 v 65.536 H 673.291 v -65.536 Z"
                                              StrokeThickness="2" />
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    HorizontalAlignment="Left"
                                    Margin="3,0,3,0"
                                    Grid.Row="0"
                                    Template="{StaticResource DropDownButtonTemplate}"
                                    VerticalAlignment="Center"
                                    Width="30" />
                            --><!--水印--><!--
                            <TextBlock x:Name="Message"
                                       Padding="0"
                                       Visibility="Collapsed"
                                       Text="{TemplateBinding helper:DatePickerHelper.Watermark}"
                                       IsHitTestVisible="False"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       FontSize="13"
                                       FontWeight="Light"
                                       IsEnabled="False"
                                       Margin="5,2,5,2" />
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Column="0"
                                               Foreground="{TemplateBinding Foreground}"
                                               Focusable="{TemplateBinding Focusable}"
                                               HorizontalContentAlignment="Center"
                                               Grid.Row="0"
                                               VerticalContentAlignment="Center"
                                               Style="{DynamicResource DatePickerTextBoxStyle1}"
                                               Background="{x:Null}"
                                               Margin="0,0,0,0"
                                               FontWeight="Light"
                                               FontSize="13" />
                            <Grid x:Name="PART_DisabledVisual"
                                  Grid.ColumnSpan="2"
                                  Grid.Column="0"
                                  IsHitTestVisible="False"
                                  Opacity="0"
                                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                                           Fill="#A5FFFFFF"
                                           RadiusY="1"
                                           Grid.Row="0"
                                           RadiusX="1" />
                                <Rectangle Grid.Column="1"
                                           Fill="#A5FFFFFF"
                                           Height="30"
                                           Margin="3,0,3,0"
                                           RadiusY="1"
                                           Grid.Row="0"
                                           RadiusX="1"
                                           Width="32" />
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                                       StaysOpen="False" />

                            </Grid>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        --><!--1.显示水印--><!--
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                                     Value="">
                            <Setter TargetName="Message"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="DatePickerStyle1"
           TargetType="{x:Type DatePicker}">
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="FontSize"
                Value="13"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="Padding"
                Value="2,0,0,0"></Setter>
        <Setter Property="Margin"
                Value="0,0,10,5"></Setter>
        <Setter Property="Foreground"
                Value="#FF333333" />
        <Setter Property="IsTodayHighlighted"
                Value="True" />
        <Setter Property="SelectedDateFormat"
                Value="Short" />
        <Setter Property="Background"
                Value="{StaticResource ResourceKey=ComboboxImage}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0"
                                     StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9"
                                  Offset="0" />
                    <GradientStop Color="#FF8399A9"
                                  Offset="0.375" />
                    <GradientStop Color="#FF718597"
                                  Offset="0.375" />
                    <GradientStop Color="#FF617584"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="Center"
                              Margin="0,0,0,0">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"
                                                 Color="#A5FFFFFF" />
                                <ControlTemplate x:Key="DropDownButtonTemplate"
                                                 TargetType="{x:Type Button}">
                                    <Grid Background="#FF0C274B"
                                          FlowDirection="LeftToRight"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="32"
                                          Height="30">
                                        <Path Fill="#26c9ff"
                                              HorizontalAlignment="Center"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Data="M 890.127 145.672 h -43.389 V 132.78 c 0 -38.644 -31.466 -70.234 -69.922 -70.234 h -1.032 c -38.458 0 -69.922 31.59 -69.922 70.234 v 12.892 h -386.7 V 132.78 c 0 -38.644 -31.465 -70.234 -69.922 -70.234 h -1.063 c -38.457 0 -69.923 31.59 -69.923 70.234 v 12.892 h -43.296 c -38.458 0 -69.923 31.622 -69.923 70.207 v 671.446 c 0 38.644 31.466 70.236 69.923 70.236 h 755.17 c 38.458 0 69.922 -31.592 69.922 -70.236 V 215.879 c 0 -38.585 -31.464 -70.207 -69.923 -70.207 Z M 733.83 132.78 c 0 -23.222 18.793 -42.139 41.954 -42.139 h 1.032 c 23.13 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.824 42.14 -41.954 42.14 h -1.032 c -23.161 0 -41.954 -18.916 -41.954 -42.14 V 132.779 Z m -527.607 0 c 0 -23.222 18.793 -42.139 41.955 -42.139 h 1.063 c 23.098 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.856 42.14 -41.954 42.14 h -1.063 c -23.162 0 -41.955 -18.916 -41.955 -42.14 V 132.779 Z m 683.904 768.626 H 134.958 c -7.585 0 -13.985 -6.525 -13.985 -14.08 V 393.649 h 783.138 v 493.676 c 0 7.555 -6.399 14.08 -13.984 14.08 Z" />
                                        <Path Fill="#26c9ff"
                                              Margin="7"
                                              HorizontalAlignment="Center"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Data="M 223.755 494.2 H 352.78 v 63.488 H 223.755 V 494.2 Z M 449.035 494.2 h 128 v 63.488 h -128 V 494.2 Z M 673.291 494.2 h 125.952 v 63.488 H 673.291 V 494.2 Z M 223.755 623.224 H 352.78 v 62.464 H 223.755 v -62.464 Z M 449.035 623.224 h 128 v 62.464 h -128 v -62.464 Z M 673.291 623.224 h 125.952 v 62.464 H 673.291 v -62.464 Z M 223.755 749.176 H 352.78 v 65.536 H 223.755 v -65.536 Z M 449.035 749.176 h 128 v 65.536 h -128 v -65.536 Z M 673.291 749.176 h 125.952 v 65.536 H 673.291 v -65.536 Z"
                                              StrokeThickness="2" />
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    HorizontalAlignment="Left"
                                    Margin="3,0,3,0"
                                    Grid.Row="0"
                                    Template="{StaticResource DropDownButtonTemplate}"
                                    VerticalAlignment="Center"
                                    Width="30" />
                            <!--水印-->
                            <TextBlock x:Name="Message"
                                       Padding="0"
                                       Visibility="Collapsed"
                                       Text="{TemplateBinding helper:DatePickerHelper.Watermark}"
                                       IsHitTestVisible="False"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       FontSize="13"
                                       FontWeight="Light"
                                       IsEnabled="False"
                                       Margin="5,2,5,2" />
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Column="0"
                                               Foreground="{TemplateBinding Foreground}"
                                               Focusable="{TemplateBinding Focusable}"
                                               HorizontalContentAlignment="Center"
                                               Grid.Row="0"
                                               VerticalContentAlignment="Center"
                                               Style="{DynamicResource DatePickerTextBoxStyle1}"
                                               Background="{x:Null}"
                                               Margin="0,0,0,0"
                                               FontWeight="Light"
                                               FontSize="13" />
                            <Grid x:Name="PART_DisabledVisual"
                                  Grid.ColumnSpan="2"
                                  Grid.Column="0"
                                  IsHitTestVisible="False"
                                  Opacity="0"
                                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                                           Fill="#A5FFFFFF"
                                           RadiusY="1"
                                           Grid.Row="0"
                                           RadiusX="1" />
                                <Rectangle Grid.Column="1"
                                           Fill="#A5FFFFFF"
                                           Height="30"
                                           Margin="3,0,3,0"
                                           RadiusY="1"
                                           Grid.Row="0"
                                           RadiusX="1"
                                           Width="32" />
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                                       StaysOpen="False" />

                            </Grid>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                                     Value="">
                            <Setter TargetName="Message"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImportBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="#5eFA0A"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="CornerRadius"
                Value="5"></Setter>
    </Style>

    <Style x:Key="SearchBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="#2763BC"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="CornerRadius"
                Value="5"></Setter>
    </Style>

    <Style x:Key="SearchButtonStyle"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <!-- 替换掉默认的模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="0"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- 更改三态的背景颜色 -->
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <!-- 鼠标悬浮时，背景颜色不变 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="Transparent" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="Transparent" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="#FD5529"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="CornerRadius"
                Value="5"></Setter>
        <Setter Property="Width"
                Value="50"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
    </Style>

    <Style x:Key="DelteteButtonStyle"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <!-- 替换掉默认的模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="0"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- 更改三态的背景颜色 -->
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <!-- 鼠标悬浮时，背景颜色不变 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="Transparent" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="Transparent" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--分页-->
    <Style x:Key="PageButton"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="FontWeight"
                        Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="pageText"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
    </Style>

    <Style x:Key="pageNum"
           TargetType="TextBox">
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Foreground"
                Value="#333333"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="Width"
                Value="50"></Setter>
        <Setter Property="Height"
                Value="26"></Setter>
        <Setter Property="Background"
                Value="#249EFA"></Setter>
    </Style>

    <Style x:Key="GoButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Width"
                Value="50"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <!-- 替换掉默认的模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="0"
                            BorderThickness="0"
                            Background="#249EFA"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- 更改三态的背景颜色 -->
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Background"
                        Value="#249EFA" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Background"
                        Value="#249EFA" />
            </Trigger>
            <!-- 鼠标悬浮时，背景颜色不变 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#249EFA" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#249EFA" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrendAnalysisToggleButton"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Width" Value="90"/>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <!-- 替换掉默认的模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="0"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- 更改三态的背景颜色 -->
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <!-- 鼠标悬浮时，背景颜色不变 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#19286C" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#19286C" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrendAnalysisButtonStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="#001D42"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="CornerRadius"
                Value="15"></Setter>
    </Style>

    <Style x:Key="topToggleButtonStyle" TargetType="Border">
        <Setter Property="Background"
                Value="#001D42"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="15"></Setter>
    </Style>
    <Style x:Key="topTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#6E8AA8"></Setter>
        <Setter Property="Text"
                Value="|"></Setter>
        <Setter Property="FontSize"
                Value="26"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
    </Style>

    <Style x:Key="TrendAnalysisToggleButton2"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Foreground"
                Value="White"></Setter>
        <!-- 替换掉默认的模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="0"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- 更改三态的背景颜色 -->
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
            <!-- 鼠标悬浮时，背景颜色不变 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#19286C" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsChecked"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="#19286C" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DateTimePickerWaterMater" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="Margin" Value="0 0 0 8"/>
    </Style>

    <Style x:Key="startBack"
           TargetType="Grid">
        <Setter Property="Background"
                Value="{StaticResource startBackImg}"></Setter>
    </Style>

    <Style x:Key="editGridMain" TargetType="Grid">
        <Setter Property="Background"
                Value="#091227"></Setter>
    </Style>
    
    <Style x:Key="editGridHeader"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#111D3E"></Setter>
    </Style>

    <Style x:Key="editGridStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="#183166"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Height"
                Value="60"></Setter>
        <Setter Property="Width"
                Value="950"></Setter>
    </Style>

    <Style x:Key="editContentText"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="宋体"></Setter>
        <Setter Property="Margin"
                Value="25,0,0,0"></Setter>
    </Style>

    <Style x:Key="editContentText1"
           TargetType="TextBox">
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="宋体"></Setter>
        <Setter Property="Margin"
                Value="25,0,0,0"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="CaretBrush"
                Value="White">
        </Setter>
    </Style>
    <Style x:Key="editContentText2"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#434C71"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="Margin"
                Value="20,0,0,0"></Setter>
    </Style>

    <Style x:Key="editButtonSubmit"
           TargetType="Button">
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="Background"
                Value="#03AAF0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
    </Style>
    <Style x:Key="editButtonReset"
           TargetType="Button">
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="Foreground"
                Value="#333333"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
    </Style>
    <Style x:Key="compareButtonPrint"
           TargetType="Button">
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="Background"
                Value="#03AAF0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
    </Style>
    <Style x:Key="compareButtonReturn"
           TargetType="Button">
        <Setter Property="Width"
                Value="110"></Setter>
        <Setter Property="Height"
                Value="35"></Setter>
        <Setter Property="Background"
                Value="#091227"></Setter>
        <Setter Property="Foreground"
                Value="#40496C"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
    </Style>
    <Style x:Key="mainBack"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#FF0A1129"></Setter>
    </Style>
    <Style x:Key="compareBorder"
           TargetType="Border">
        <Setter Property="BorderBrush"
                Value="#183166"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
    </Style>
    <Style x:Key="compareTextBlock"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myCheckBox"
           TargetType="CheckBox">
        <Setter  Property="Focusable"
                 Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Background="Transparent"
                                  Cursor="Hand">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <TextBlock Text="√" Foreground="White" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Background="Transparent"
                                  Cursor="Hand">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <TextBlock Text=""
                                           Foreground="White"
                                           FontSize="20"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TrendAnalysisChart"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#001D42"></Setter>
    </Style>
    <Style TargetType="Border"
           x:Key="compareCheckBorder">
        <Setter Property="Width"
                Value="13"></Setter>
        <Setter Property="Height"
                Value="13"></Setter>
        <Setter Property="BorderBrush"
                Value="White"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
    </Style>
    <Style x:Key="compareCheck"
           TargetType="CheckBox">
        <Setter  Property="Focusable"
                 Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Width"
                Value="20" />
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Background="Transparent"
                                  Cursor="Hand">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <TextBlock Text="√"
                                           Foreground="White"
                                           FontSize="16"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Background="Transparent"
                                  Cursor="Hand">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <TextBlock Text=""
                                           Foreground="White"
                                           FontSize="16"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"></TextBlock>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="comparCheckText"
           TargetType="TextBlock">
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="FontFamily"
                Value="Source Han Sans CN"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="FontWeight"
                Value="Normal"></Setter>
    </Style>

    <Style x:Key="TrainHeadRbtStyle" TargetType="{x:Type RadioButton}">
        <!--Setter Property="Width" Value="120"/-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0, 0, 5, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="border2"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}"/>

                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Foreground" Value="White"/>-->
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainHeadRbtImgS}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainHeadRbtImg}"/>
                            <!--<Setter Property="Foreground" Value="#82B9FF"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TrainBodyRbtStyle" TargetType="{x:Type RadioButton}">
        <!--Setter Property="Width" Value="120"/-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0, 0, 5, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="border2"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}"/>

                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Foreground" Value="White"/>-->
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainBodyRbtImgS}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainBodyRbtImg}"/>
                            <!--<Setter Property="Foreground" Value="#82B9FF"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TrainTailRbtStyle" TargetType="{x:Type RadioButton}">
        <!--Setter Property="Width" Value="120"/-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0, 0, 5, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="border2"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}"/>

                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Foreground" Value="White"/>-->
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainTailRbtImgS}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource ResourceKey=TrainTailRbtImg}"/>
                            <!--<Setter Property="Foreground" Value="#82B9FF"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>